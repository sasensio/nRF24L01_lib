

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Jul 15 20:59:01 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001E                     	;# 
    43  001F                     	;# 
    44  0081                     	;# 
    45  0085                     	;# 
    46  0086                     	;# 
    47  008C                     	;# 
    48  008D                     	;# 
    49  008E                     	;# 
    50  008F                     	;# 
    51  0090                     	;# 
    52  0092                     	;# 
    53  0093                     	;# 
    54  0094                     	;# 
    55  0098                     	;# 
    56  0099                     	;# 
    57  009B                     	;# 
    58  009C                     	;# 
    59  009D                     	;# 
    60  009E                     	;# 
    61  009F                     	;# 
    62  0105                     	;# 
    63  010C                     	;# 
    64  010D                     	;# 
    65  010E                     	;# 
    66  010F                     	;# 
    67  018C                     	;# 
    68  018D                     	;# 
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008F                     	;# 
   157  0090                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009B                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  0105                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0013                     _SSPBUF	set	19
   176  0014                     _SSPCON	set	20
   177  0033                     _RB3	set	51
   178  0035                     _RB5	set	53
   179  00A5                     _SSPEN	set	165
   180  0094                     _SSPSTAT	set	148
   181  04A0                     _BF	set	1184
   182  0431                     _TRISB1	set	1073
   183  0432                     _TRISB2	set	1074
   184  0433                     _TRISB3	set	1075
   185  0434                     _TRISB4	set	1076
   186  0435                     _TRISB5	set	1077
   187                           
   188                           	psect	text0
   189  0000                     __ptext0:	
   190                           ; #config settings
   191                           
   192                           
   193                           ;psect for function _nRF24_send_CMD
   194  0000                     
   195                           	psect	cinit
   196  07FD                     start_initialization:	
   197  07FD                     __initialization:	
   198  07FD                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201  07FD                     __end_of__initialization:	
   202  07FD  0183               	clrf	3
   203  07FE  118A  2F37         	ljmp	_main	;jump to C main() function
   204                           
   205                           	psect	cstackCOMMON
   206  0070                     __pcstackCOMMON:	
   207  0070                     ?_spi_init:	
   208  0070                     ??_spi_init:	
   209                           ; 0 bytes @ 0x0
   210                           
   211  0070                     ?_nRF24_init:	
   212                           ; 0 bytes @ 0x0
   213                           
   214  0070                     ?_nRF24_PD_mode:	
   215                           ; 0 bytes @ 0x0
   216                           
   217  0070                     ?_nRF24_send_CMD:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     nRF24_send_CMD@txdata:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 1 bytes @ 0x0
   225  0070                     	ds	1
   226  0071                     nRF24_send_CMD@txbytecount:	
   227                           
   228                           ; 1 bytes @ 0x1
   229  0071                     	ds	1
   230  0072                     nRF24_send_CMD@rxdata:	
   231                           
   232                           ; 1 bytes @ 0x2
   233  0072                     	ds	1
   234  0073                     nRF24_send_CMD@rxbytecount:	
   235                           
   236                           ; 1 bytes @ 0x3
   237  0073                     	ds	1
   238  0074                     ??_nRF24_send_CMD:	
   239                           
   240                           ; 0 bytes @ 0x4
   241  0074                     	ds	2
   242  0076                     nRF24_send_CMD@cmd:	
   243                           
   244                           ; 1 bytes @ 0x6
   245  0076                     	ds	1
   246  0077                     nRF24_send_CMD@nRF24_status:	
   247                           
   248                           ; 1 bytes @ 0x7
   249  0077                     	ds	1
   250  0078                     nRF24_send_CMD@txi:	
   251                           
   252                           ; 1 bytes @ 0x8
   253  0078                     	ds	1
   254  0079                     nRF24_send_CMD@rxi:	
   255                           
   256                           ; 1 bytes @ 0x9
   257  0079                     	ds	1
   258  007A                     nRF24_send_CMD@txbytes:	
   259                           
   260                           ; 1 bytes @ 0xA
   261  007A                     	ds	1
   262  007B                     nRF24_send_CMD@rxbytes:	
   263                           
   264                           ; 1 bytes @ 0xB
   265  007B                     	ds	1
   266  007C                     ?_nRF24_read_reg:	
   267  007C                     ?_nRF24_write_reg:	
   268                           ; 1 bytes @ 0xC
   269                           
   270  007C                     nRF24_read_reg@data_reg:	
   271                           ; 1 bytes @ 0xC
   272                           
   273  007C                     nRF24_write_reg@data_reg:	
   274                           ; 1 bytes @ 0xC
   275                           
   276                           
   277                           ; 1 bytes @ 0xC
   278  007C                     	ds	1
   279  007D                     nRF24_read_reg@bytes_length:	
   280  007D                     nRF24_write_reg@bytes_length:	
   281                           ; 1 bytes @ 0xD
   282                           
   283                           
   284                           ; 1 bytes @ 0xD
   285  007D                     	ds	1
   286  007E                     ??_nRF24_init:	
   287  007E                     ??_main:	
   288                           ; 0 bytes @ 0xE
   289                           
   290                           
   291                           	psect	cstackBANK0
   292  0020                     __pcstackBANK0:	
   293                           ; 0 bytes @ 0xE
   294                           
   295  0020                     ??_nRF24_read_reg:	
   296  0020                     ??_nRF24_write_reg:	
   297                           ; 0 bytes @ 0x0
   298                           
   299                           
   300                           ; 0 bytes @ 0x0
   301  0020                     	ds	2
   302  0022                     nRF24_write_reg@reg:	
   303                           
   304                           ; 1 bytes @ 0x2
   305  0022                     	ds	1
   306  0023                     nRF24_read_reg@reg:	
   307                           
   308                           ; 1 bytes @ 0x3
   309  0023                     	ds	1
   310  0024                     nRF24_read_reg@data:	
   311                           
   312                           ; 1 bytes @ 0x4
   313  0024                     	ds	1
   314  0025                     nRF24_read_reg@tmp:	
   315                           
   316                           ; 1 bytes @ 0x5
   317  0025                     	ds	1
   318  0026                     ??_nRF24_PD_mode:	
   319                           
   320                           ; 0 bytes @ 0x6
   321  0026                     	ds	2
   322  0028                     nRF24_PD_mode@status:	
   323                           
   324                           ; 1 bytes @ 0x8
   325  0028                     	ds	1
   326  0029                     nRF24_PD_mode@data:	
   327                           
   328                           ; 1 bytes @ 0x9
   329  0029                     	ds	1
   330  002A                     ?_main:	
   331  002A                     main@argc:	
   332                           ; 2 bytes @ 0xA
   333                           
   334                           
   335                           ; 2 bytes @ 0xA
   336  002A                     	ds	2
   337  002C                     main@argv:	
   338                           
   339                           ; 2 bytes @ 0xC
   340  002C                     	ds	2
   341                           
   342                           	psect	maintext
   343  0737                     __pmaintext:	
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 18 in file "main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;  argc            2   10[BANK0 ] int 
   352 ;;  argv            2   12[BANK0 ] PTR PTR unsigned char 
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  2   10[BANK0 ] int 
   357 ;; Registers used:
   358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 17F/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       4       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0
   367 ;;      Totals:         0       4       0       0       0
   368 ;;Total ram usage:        4 bytes
   369 ;; Hardware stack levels required when called:    4
   370 ;; This function calls:
   371 ;;		_nRF24_init
   372 ;;		_spi_init
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _main
   380  0737                     _main:	
   381  0737                     l100:	
   382                           ;incstack = 0
   383                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   384                           ;main.c: 20: while(1)
   385                           
   386                           
   387                           ;main.c: 21: {
   388                           ;main.c: 22: spi_init();
   389  0737  118A  273E  118A   	fcall	_spi_init
   390                           
   391                           ;main.c: 23: nRF24_init();
   392  073A  118A  274A  118A   	fcall	_nRF24_init
   393  073D  2F37               	goto	l100
   394  073E                     __end_of_main:	
   395                           ;main.c: 24: }
   396                           ;main.c: 26: return (0);
   397                           ;	Return value of _main is never used
   398                           
   399                           
   400                           	psect	text1
   401  074A                     __ptext1:	
   402 ;; *************** function _nRF24_init *****************
   403 ;; Defined at:
   404 ;;		line 46 in file "nRF24L0.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;		None               void
   411 ;; Registers used:
   412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    3
   425 ;; This function calls:
   426 ;;		_nRF24_PD_mode
   427 ;;		_spi_init
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           
   434                           ;psect for function _nRF24_init
   435  074A                     _nRF24_init:	
   436                           
   437                           ;nRF24L0.c: 48: TRISB3=0;
   438                           
   439                           ;incstack = 0
   440                           ; Regs used in _nRF24_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   441  074A  1683               	bsf	3,5	;RP0=1, select bank1
   442  074B  1303               	bcf	3,6	;RP1=0, select bank1
   443  074C  1186               	bcf	6,3	;volatile
   444                           
   445                           ;nRF24L0.c: 49: TRISB5=0;
   446  074D  1286               	bcf	6,5	;volatile
   447                           
   448                           ;nRF24L0.c: 51: RB3=1;
   449  074E  1283               	bcf	3,5	;RP0=0, select bank0
   450  074F  1303               	bcf	3,6	;RP1=0, select bank0
   451  0750  1586               	bsf	6,3	;volatile
   452                           
   453                           ;nRF24L0.c: 52: RB5=0;
   454  0751  1286               	bcf	6,5	;volatile
   455                           
   456                           ;nRF24L0.c: 53: spi_init();
   457  0752  118A  273E  118A   	fcall	_spi_init
   458                           
   459                           ;nRF24L0.c: 54: nRF24_PD_mode();
   460  0755  118A  2785         	fcall	_nRF24_PD_mode
   461  0757  0008               	return
   462  0758                     __end_of_nRF24_init:	
   463                           
   464                           	psect	text2
   465  073E                     __ptext2:	
   466 ;; *************** function _spi_init *****************
   467 ;; Defined at:
   468 ;;		line 7 in file "../spi_lib/spi.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;		None               void
   475 ;; Registers used:
   476 ;;		wreg
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0
   485 ;;      Totals:         0       0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_nRF24_init
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           
   497                           ;psect for function _spi_init
   498  073E                     _spi_init:	
   499                           
   500                           ;spi.c: 10: TRISB1=1;
   501                           
   502                           ;incstack = 0
   503                           ; Regs used in _spi_init: [wreg]
   504  073E  1683               	bsf	3,5	;RP0=1, select bank1
   505  073F  1303               	bcf	3,6	;RP1=0, select bank1
   506  0740  1486               	bsf	6,1	;volatile
   507                           
   508                           ;spi.c: 11: TRISB2=0;
   509  0741  1106               	bcf	6,2	;volatile
   510                           
   511                           ;spi.c: 12: TRISB4=0;
   512  0742  1206               	bcf	6,4	;volatile
   513                           
   514                           ;spi.c: 14: SSPSTAT=0x40;
   515  0743  3040               	movlw	64
   516  0744  0094               	movwf	20	;volatile
   517                           
   518                           ;spi.c: 25: SSPCON= 0x30;
   519  0745  3030               	movlw	48
   520  0746  1283               	bcf	3,5	;RP0=0, select bank0
   521  0747  1303               	bcf	3,6	;RP1=0, select bank0
   522  0748  0094               	movwf	20	;volatile
   523  0749  0008               	return
   524  074A                     __end_of_spi_init:	
   525                           
   526                           	psect	text3
   527  0785                     __ptext3:	
   528 ;; *************** function _nRF24_PD_mode *****************
   529 ;; Defined at:
   530 ;;		line 109 in file "nRF24L0.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  data            1    9[BANK0 ] unsigned char 
   535 ;;  status          1    8[BANK0 ] unsigned char 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      unsigned char 
   538 ;; Registers used:
   539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       2       0       0       0
   547 ;;      Temps:          0       2       0       0       0
   548 ;;      Totals:         0       4       0       0       0
   549 ;;Total ram usage:        4 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    2
   552 ;; This function calls:
   553 ;;		_nRF24_read_reg
   554 ;;		_nRF24_write_reg
   555 ;; This function is called by:
   556 ;;		_nRF24_init
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _nRF24_PD_mode
   562  0785                     _nRF24_PD_mode:	
   563                           
   564                           ;nRF24L0.c: 111: char data;
   565                           ;nRF24L0.c: 112: char status;
   566                           ;nRF24L0.c: 114: status=nRF24_read_reg(0x00,&data,1);
   567                           
   568                           ;incstack = 0
   569                           ; Regs used in _nRF24_PD_mode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   570  0785  3029               	movlw	nRF24_PD_mode@data& (0+255)
   571  0786  1283               	bcf	3,5	;RP0=0, select bank0
   572  0787  1303               	bcf	3,6	;RP1=0, select bank0
   573  0788  00A6               	movwf	??_nRF24_PD_mode
   574  0789  0826               	movf	??_nRF24_PD_mode,w
   575  078A  00FC               	movwf	nRF24_read_reg@data_reg
   576  078B  01FD               	clrf	nRF24_read_reg@bytes_length
   577  078C  0AFD               	incf	nRF24_read_reg@bytes_length,f
   578  078D  3000               	movlw	0
   579  078E  118A  276A  118A   	fcall	_nRF24_read_reg
   580  0791  1283               	bcf	3,5	;RP0=0, select bank0
   581  0792  1303               	bcf	3,6	;RP1=0, select bank0
   582  0793  00A7               	movwf	??_nRF24_PD_mode+1
   583  0794  0827               	movf	??_nRF24_PD_mode+1,w
   584  0795  00A8               	movwf	nRF24_PD_mode@status
   585                           
   586                           ;nRF24L0.c: 115: if ((data&(1<<0x02)))
   587  0796  1D29               	btfss	nRF24_PD_mode@data,2
   588  0797  2FA6               	goto	l833
   589                           
   590                           ;nRF24L0.c: 116: {
   591                           ;nRF24L0.c: 117: (data=data&(~(1<<0x02)));
   592  0798  0829               	movf	nRF24_PD_mode@data,w
   593  0799  39FB               	andlw	251
   594  079A  00A6               	movwf	??_nRF24_PD_mode
   595  079B  0826               	movf	??_nRF24_PD_mode,w
   596  079C  00A9               	movwf	nRF24_PD_mode@data
   597                           
   598                           ;nRF24L0.c: 118: nRF24_write_reg(0x00, &data, 1 );
   599  079D  3029               	movlw	nRF24_PD_mode@data& (0+255)
   600  079E  00A6               	movwf	??_nRF24_PD_mode
   601  079F  0826               	movf	??_nRF24_PD_mode,w
   602  07A0  00FC               	movwf	nRF24_write_reg@data_reg
   603  07A1  01FD               	clrf	nRF24_write_reg@bytes_length
   604  07A2  0AFD               	incf	nRF24_write_reg@bytes_length,f
   605  07A3  3000               	movlw	0
   606  07A4  118A  2758         	fcall	_nRF24_write_reg
   607  07A6                     l833:	
   608                           
   609                           ;nRF24L0.c: 119: }
   610                           ;nRF24L0.c: 120: RB5=0;
   611  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   612  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   613  07A8  1286               	bcf	6,5	;volatile
   614  07A9  0008               	return
   615  07AA                     __end_of_nRF24_PD_mode:	
   616                           ;nRF24L0.c: 121: return data;
   617                           ;	Return value of _nRF24_PD_mode is never used
   618                           
   619                           
   620                           	psect	text4
   621  0758                     __ptext4:	
   622 ;; *************** function _nRF24_write_reg *****************
   623 ;; Defined at:
   624 ;;		line 67 in file "nRF24L0.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  reg             1    wreg     unsigned char 
   627 ;;  data_reg        1   12[COMMON] PTR unsigned char 
   628 ;;		 -> setup_rx_data_pipe@sizePL(1), setup_RF@rf_ch(1), setup_RF@data(1), setup_EShockBurst@addressEspaceSize(1), 
   629 ;;		 -> setup_EShockBurst@data(1), nRF24_SBII_mode@data(1), nRF24_SBI_mode@data(1), nRF24_TX_mode@data(1), 
   630 ;;		 -> nRF24_RX_mode@data(1), nRF24_PD_mode@data(1), nRF24_res_bit@data(1), nRF24_set_bit@data(1), 
   631 ;;  bytes_length    1   13[COMMON] unsigned char 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  reg             1    2[BANK0 ] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      unsigned char 
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         2       0       0       0       0
   644 ;;      Locals:         0       1       0       0       0
   645 ;;      Temps:          0       2       0       0       0
   646 ;;      Totals:         2       3       0       0       0
   647 ;;Total ram usage:        5 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    1
   650 ;; This function calls:
   651 ;;		_nRF24_send_CMD
   652 ;; This function is called by:
   653 ;;		_nRF24_PD_mode
   654 ;;		_nRF24_set_bit
   655 ;;		_nRF24_res_bit
   656 ;;		_nRF24_RX_mode
   657 ;;		_nRF24_TX_mode
   658 ;;		_nRF24_SBI_mode
   659 ;;		_nRF24_SBII_mode
   660 ;;		_setup_EShockBurst
   661 ;;		_setup_RF
   662 ;;		_setup_rx_data_pipe
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _nRF24_write_reg
   668  0758                     _nRF24_write_reg:	
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _nRF24_write_reg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   672                           ;nRF24_write_reg@reg stored from wreg
   673  0758  1283               	bcf	3,5	;RP0=0, select bank0
   674  0759  1303               	bcf	3,6	;RP1=0, select bank0
   675  075A  00A2               	movwf	nRF24_write_reg@reg
   676                           
   677                           ;nRF24L0.c: 69: return nRF24_send_CMD(0x20|reg, data_reg,bytes_length,0,0);
   678  075B  087C               	movf	nRF24_write_reg@data_reg,w
   679  075C  00A0               	movwf	??_nRF24_write_reg
   680  075D  0820               	movf	??_nRF24_write_reg,w
   681  075E  00F0               	movwf	nRF24_send_CMD@txdata
   682  075F  087D               	movf	nRF24_write_reg@bytes_length,w
   683  0760  00A1               	movwf	??_nRF24_write_reg+1
   684  0761  0821               	movf	??_nRF24_write_reg+1,w
   685  0762  00F1               	movwf	nRF24_send_CMD@txbytecount
   686  0763  01F2               	clrf	nRF24_send_CMD@rxdata
   687  0764  01F3               	clrf	nRF24_send_CMD@rxbytecount
   688  0765  0822               	movf	nRF24_write_reg@reg,w
   689  0766  3820               	iorlw	32
   690  0767  118A  27AA         	fcall	_nRF24_send_CMD
   691  0769  0008               	return
   692  076A                     __end_of_nRF24_write_reg:	
   693                           
   694                           	psect	text5
   695  076A                     __ptext5:	
   696 ;; *************** function _nRF24_read_reg *****************
   697 ;; Defined at:
   698 ;;		line 58 in file "nRF24L0.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  reg             1    wreg     unsigned char 
   701 ;;  data_reg        1   12[COMMON] PTR unsigned char 
   702 ;;		 -> nRF24_SBII_mode@data(1), nRF24_SBI_mode@data(1), nRF24_TX_mode@data(1), nRF24_RX_mode@data(1), 
   703 ;;		 -> nRF24_PD_mode@data(1), nRF24_res_bit@data(1), nRF24_set_bit@data(1), 
   704 ;;  bytes_length    1   13[COMMON] unsigned char 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  reg             1    3[BANK0 ] unsigned char 
   707 ;;  tmp             1    5[BANK0 ] unsigned char 
   708 ;;  data            1    4[BANK0 ] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      unsigned char 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   718 ;;      Params:         2       0       0       0       0
   719 ;;      Locals:         0       3       0       0       0
   720 ;;      Temps:          0       3       0       0       0
   721 ;;      Totals:         2       6       0       0       0
   722 ;;Total ram usage:        8 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    1
   725 ;; This function calls:
   726 ;;		_nRF24_send_CMD
   727 ;; This function is called by:
   728 ;;		_nRF24_PD_mode
   729 ;;		_nRF24_set_bit
   730 ;;		_nRF24_res_bit
   731 ;;		_nRF24_RX_mode
   732 ;;		_nRF24_TX_mode
   733 ;;		_nRF24_SBI_mode
   734 ;;		_nRF24_SBII_mode
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           
   739                           ;psect for function _nRF24_read_reg
   740  076A                     _nRF24_read_reg:	
   741                           
   742                           ;incstack = 0
   743                           ; Regs used in _nRF24_read_reg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   744                           ;nRF24_read_reg@reg stored from wreg
   745  076A  1283               	bcf	3,5	;RP0=0, select bank0
   746  076B  1303               	bcf	3,6	;RP1=0, select bank0
   747  076C  00A3               	movwf	nRF24_read_reg@reg
   748                           
   749                           ;nRF24L0.c: 60: char data;
   750                           ;nRF24L0.c: 61: char tmp = (0x00 | reg);
   751  076D  0823               	movf	nRF24_read_reg@reg,w
   752  076E  00A0               	movwf	??_nRF24_read_reg
   753  076F  0820               	movf	??_nRF24_read_reg,w
   754  0770  00A5               	movwf	nRF24_read_reg@tmp
   755                           
   756                           ;nRF24L0.c: 62: data = nRF24_send_CMD(tmp, 0, 0,data_reg,bytes_length);
   757  0771  01F0               	clrf	nRF24_send_CMD@txdata
   758  0772  01F1               	clrf	nRF24_send_CMD@txbytecount
   759  0773  087C               	movf	nRF24_read_reg@data_reg,w
   760  0774  00A0               	movwf	??_nRF24_read_reg
   761  0775  0820               	movf	??_nRF24_read_reg,w
   762  0776  00F2               	movwf	nRF24_send_CMD@rxdata
   763  0777  087D               	movf	nRF24_read_reg@bytes_length,w
   764  0778  00A1               	movwf	??_nRF24_read_reg+1
   765  0779  0821               	movf	??_nRF24_read_reg+1,w
   766  077A  00F3               	movwf	nRF24_send_CMD@rxbytecount
   767  077B  0825               	movf	nRF24_read_reg@tmp,w
   768  077C  118A  27AA         	fcall	_nRF24_send_CMD
   769  077E  1283               	bcf	3,5	;RP0=0, select bank0
   770  077F  1303               	bcf	3,6	;RP1=0, select bank0
   771  0780  00A2               	movwf	??_nRF24_read_reg+2
   772  0781  0822               	movf	??_nRF24_read_reg+2,w
   773  0782  00A4               	movwf	nRF24_read_reg@data
   774                           
   775                           ;nRF24L0.c: 64: return (data);
   776  0783  0824               	movf	nRF24_read_reg@data,w
   777  0784  0008               	return
   778  0785                     __end_of_nRF24_read_reg:	
   779                           
   780                           	psect	text6
   781  07AA                     __ptext6:	
   782 ;; *************** function _nRF24_send_CMD *****************
   783 ;; Defined at:
   784 ;;		line 10 in file "nRF24L0.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  cmd             1    wreg     unsigned char 
   787 ;;  txdata          1    0[COMMON] PTR unsigned char 
   788 ;;		 -> setup_rx_data_pipe@sizePL(1), setup_RF@rf_ch(1), setup_RF@data(1), setup_EShockBurst@addressEspaceSize(1), 
   789 ;;		 -> setup_EShockBurst@data(1), nRF24_SBII_mode@data(1), nRF24_SBI_mode@data(1), nRF24_TX_mode@data(1), 
   790 ;;		 -> nRF24_RX_mode@data(1), nRF24_PD_mode@data(1), nRF24_res_bit@data(1), nRF24_set_bit@data(1), 
   791 ;;		 -> NULL(0), 
   792 ;;  txbytecount     1    1[COMMON] unsigned char 
   793 ;;  rxdata          1    2[COMMON] PTR unsigned char 
   794 ;;		 -> nRF24_SBII_mode@data(1), nRF24_SBI_mode@data(1), nRF24_TX_mode@data(1), nRF24_RX_mode@data(1), 
   795 ;;		 -> nRF24_PD_mode@data(1), nRF24_res_bit@data(1), nRF24_set_bit@data(1), NULL(0), 
   796 ;;  rxbytecount     1    3[COMMON] unsigned char 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  cmd             1    6[COMMON] unsigned char 
   799 ;;  rxbytes         1   11[COMMON] unsigned char 
   800 ;;  txbytes         1   10[COMMON] unsigned char 
   801 ;;  rxi             1    9[COMMON] unsigned char 
   802 ;;  txi             1    8[COMMON] unsigned char 
   803 ;;  nRF24_status    1    7[COMMON] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      unsigned char 
   806 ;; Registers used:
   807 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         4       0       0       0       0
   814 ;;      Locals:         6       0       0       0       0
   815 ;;      Temps:          2       0       0       0       0
   816 ;;      Totals:        12       0       0       0       0
   817 ;;Total ram usage:       12 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_nRF24_read_reg
   823 ;;		_nRF24_write_reg
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _nRF24_send_CMD
   829  07AA                     _nRF24_send_CMD:	
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _nRF24_send_CMD: [wreg-fsr0h+status,2+status,0]
   833                           ;nRF24_send_CMD@cmd stored from wreg
   834  07AA  00F6               	movwf	nRF24_send_CMD@cmd
   835                           
   836                           ;nRF24L0.c: 12: char nRF24_status;
   837                           ;nRF24L0.c: 13: char txi=0;
   838  07AB  01F8               	clrf	nRF24_send_CMD@txi
   839                           
   840                           ;nRF24L0.c: 14: char rxi=0;
   841  07AC  01F9               	clrf	nRF24_send_CMD@rxi
   842                           
   843                           ;nRF24L0.c: 15: char txbytes=txbytecount;
   844  07AD  0871               	movf	nRF24_send_CMD@txbytecount,w
   845  07AE  00F4               	movwf	??_nRF24_send_CMD
   846  07AF  0874               	movf	??_nRF24_send_CMD,w
   847  07B0  00FA               	movwf	nRF24_send_CMD@txbytes
   848                           
   849                           ;nRF24L0.c: 16: char rxbytes=rxbytecount;
   850  07B1  0873               	movf	nRF24_send_CMD@rxbytecount,w
   851  07B2  00F4               	movwf	??_nRF24_send_CMD
   852  07B3  0874               	movf	??_nRF24_send_CMD,w
   853  07B4  00FB               	movwf	nRF24_send_CMD@rxbytes
   854                           
   855                           ;nRF24L0.c: 18: SSPBUF = cmd;
   856  07B5  0876               	movf	nRF24_send_CMD@cmd,w
   857  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   858  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   859  07B8  0093               	movwf	19	;volatile
   860                           
   861                           ;nRF24L0.c: 19: RB3=0;
   862  07B9  1186               	bcf	6,3	;volatile
   863                           
   864                           ;nRF24L0.c: 20: SSPEN=1;;
   865  07BA  1694               	bsf	20,5	;volatile
   866  07BB                     l21:	
   867                           ;nRF24L0.c: 21: while (!BF){}
   868                           
   869  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   870  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   871  07BD  1C14               	btfss	20,0	;volatile
   872  07BE  2FBB               	goto	l21
   873                           
   874                           ;nRF24L0.c: 22: BF=0;
   875  07BF  1014               	bcf	20,0	;volatile
   876                           
   877                           ;nRF24L0.c: 23: nRF24_status=SSPBUF;
   878  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   879  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   880  07C2  0813               	movf	19,w	;volatile
   881  07C3  00F4               	movwf	??_nRF24_send_CMD
   882  07C4  0874               	movf	??_nRF24_send_CMD,w
   883  07C5  00F7               	movwf	nRF24_send_CMD@nRF24_status
   884  07C6                     l805:	
   885                           ;nRF24L0.c: 24: while (txbytes || rxbytes)
   886                           
   887  07C6  08FA               	movf	nRF24_send_CMD@txbytes,f
   888  07C7  1903               	btfsc	3,2
   889  07C8  2FF5               	goto	l807
   890  07C9                     l789:	
   891                           
   892                           ;nRF24L0.c: 25: {
   893                           ;nRF24L0.c: 26: if (txbytes)
   894  07C9  087A               	movf	nRF24_send_CMD@txbytes,w
   895  07CA  1903               	btfsc	3,2
   896  07CB  2FD8               	goto	l795
   897                           
   898                           ;nRF24L0.c: 27: {
   899                           ;nRF24L0.c: 28: SSPBUF=*(txdata+txi);
   900  07CC  0878               	movf	nRF24_send_CMD@txi,w
   901  07CD  0770               	addwf	nRF24_send_CMD@txdata,w
   902  07CE  00F4               	movwf	??_nRF24_send_CMD
   903  07CF  0874               	movf	??_nRF24_send_CMD,w
   904  07D0  0084               	movwf	4
   905  07D1  1383               	bcf	3,7	;select IRP bank0
   906  07D2  0800               	movf	0,w
   907  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   908  07D4  0093               	movwf	19	;volatile
   909                           
   910                           ;nRF24L0.c: 29: txbytes--;
   911  07D5  3001               	movlw	1
   912  07D6  02FA               	subwf	nRF24_send_CMD@txbytes,f
   913                           
   914                           ;nRF24L0.c: 30: }
   915  07D7  2FDA               	goto	l28
   916  07D8                     l795:	
   917                           
   918                           ;nRF24L0.c: 31: else
   919                           ;nRF24L0.c: 32: SSPBUF=0;
   920  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   921  07D9  0193               	clrf	19	;volatile
   922  07DA                     l28:	
   923                           ;nRF24L0.c: 33: while (!BF){}
   924                           
   925  07DA  1683               	bsf	3,5	;RP0=1, select bank1
   926  07DB  1303               	bcf	3,6	;RP1=0, select bank1
   927  07DC  1C14               	btfss	20,0	;volatile
   928  07DD  2FDA               	goto	l28
   929                           
   930                           ;nRF24L0.c: 34: if(rxbytes)
   931  07DE  087B               	movf	nRF24_send_CMD@rxbytes,w
   932  07DF  1903               	btfsc	3,2
   933  07E0  2FF1               	goto	l803
   934                           
   935                           ;nRF24L0.c: 35: {
   936                           ;nRF24L0.c: 36: *(rxdata+rxi)=SSPBUF;
   937  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   938  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   939  07E3  0813               	movf	19,w	;volatile
   940  07E4  00F4               	movwf	??_nRF24_send_CMD
   941  07E5  0879               	movf	nRF24_send_CMD@rxi,w
   942  07E6  0772               	addwf	nRF24_send_CMD@rxdata,w
   943  07E7  00F5               	movwf	??_nRF24_send_CMD+1
   944  07E8  0875               	movf	??_nRF24_send_CMD+1,w
   945  07E9  0084               	movwf	4
   946  07EA  0874               	movf	??_nRF24_send_CMD,w
   947  07EB  1383               	bcf	3,7	;select IRP bank0
   948  07EC  0080               	movwf	0
   949                           
   950                           ;nRF24L0.c: 37: rxbytes--;
   951  07ED  3001               	movlw	1
   952  07EE  02FB               	subwf	nRF24_send_CMD@rxbytes,f
   953  07EF  1683               	bsf	3,5	;RP0=1, select bank1
   954  07F0  1303               	bcf	3,6	;RP1=0, select bank1
   955  07F1                     l803:	
   956                           
   957                           ;nRF24L0.c: 38: }
   958                           ;nRF24L0.c: 39: BF=0;
   959  07F1  1683               	bsf	3,5	;RP0=1, select bank1
   960  07F2  1303               	bcf	3,6	;RP1=0, select bank1
   961  07F3  1014               	bcf	20,0	;volatile
   962  07F4  2FC6               	goto	l805
   963  07F5                     l807:	
   964  07F5  08FB               	movf	nRF24_send_CMD@rxbytes,f
   965  07F6  1D03               	skipz
   966  07F7  2FC9               	goto	l789
   967                           
   968                           ;nRF24L0.c: 40: }
   969                           ;nRF24L0.c: 41: SSPEN=0;
   970  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   971  07F9  1294               	bcf	20,5	;volatile
   972                           
   973                           ;nRF24L0.c: 42: RB3=1;
   974  07FA  1586               	bsf	6,3	;volatile
   975                           
   976                           ;nRF24L0.c: 43: return (nRF24_status);
   977  07FB  0877               	movf	nRF24_send_CMD@nRF24_status,w
   978  07FC  0008               	return
   979  07FD                     __end_of_nRF24_send_CMD:	
   980  007E                     btemp	set	126	;btemp
   981  007E                     wtemp	set	126
   982  007E                     wtemp0	set	126
   983  0080                     wtemp1	set	128
   984  0082                     wtemp2	set	130
   985  0084                     wtemp3	set	132
   986  0086                     wtemp4	set	134
   987  0088                     wtemp5	set	136
   988  007F                     wtemp6	set	127
   989  007E                     ttemp	set	126
   990  007E                     ttemp0	set	126
   991  0081                     ttemp1	set	129
   992  0084                     ttemp2	set	132
   993  0087                     ttemp3	set	135
   994  007F                     ttemp4	set	127
   995  007E                     ltemp	set	126
   996  007E                     ltemp0	set	126
   997  0082                     ltemp1	set	130
   998  0086                     ltemp2	set	134
   999  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    nRF24_write_reg@data_reg	PTR unsigned char  size(1) Largest target is 1
		 -> setup_rx_data_pipe@sizePL(COMMON[1]), setup_RF@rf_ch(COMMON[1]), setup_RF@data(COMMON[1]), setup_EShockBurst@addressEspaceSize(COMMON[1]), 
		 -> setup_EShockBurst@data(COMMON[1]), nRF24_SBII_mode@data(COMMON[1]), nRF24_SBI_mode@data(COMMON[1]), nRF24_TX_mode@data(COMMON[1]), 
		 -> nRF24_RX_mode@data(COMMON[1]), nRF24_PD_mode@data(BANK0[1]), nRF24_res_bit@data(COMMON[1]), nRF24_set_bit@data(COMMON[1]), 

    nRF24_read_reg@data_reg	PTR unsigned char  size(1) Largest target is 1
		 -> nRF24_SBII_mode@data(COMMON[1]), nRF24_SBI_mode@data(COMMON[1]), nRF24_TX_mode@data(COMMON[1]), nRF24_RX_mode@data(COMMON[1]), 
		 -> nRF24_PD_mode@data(BANK0[1]), nRF24_res_bit@data(COMMON[1]), nRF24_set_bit@data(COMMON[1]), 

    nRF24_send_CMD@rxdata	PTR unsigned char  size(1) Largest target is 1
		 -> nRF24_SBII_mode@data(COMMON[1]), nRF24_SBI_mode@data(COMMON[1]), nRF24_TX_mode@data(COMMON[1]), nRF24_RX_mode@data(COMMON[1]), 
		 -> nRF24_PD_mode@data(BANK0[1]), nRF24_res_bit@data(COMMON[1]), nRF24_set_bit@data(COMMON[1]), NULL(NULL[0]), 

    nRF24_send_CMD@txdata	PTR unsigned char  size(1) Largest target is 1
		 -> setup_rx_data_pipe@sizePL(COMMON[1]), setup_RF@rf_ch(COMMON[1]), setup_RF@data(COMMON[1]), setup_EShockBurst@addressEspaceSize(COMMON[1]), 
		 -> setup_EShockBurst@data(COMMON[1]), nRF24_SBII_mode@data(COMMON[1]), nRF24_SBI_mode@data(COMMON[1]), nRF24_TX_mode@data(COMMON[1]), 
		 -> nRF24_RX_mode@data(COMMON[1]), nRF24_PD_mode@data(BANK0[1]), nRF24_res_bit@data(COMMON[1]), nRF24_set_bit@data(COMMON[1]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _nRF24_PD_mode->_nRF24_read_reg
    _nRF24_PD_mode->_nRF24_write_reg
    _nRF24_write_reg->_nRF24_send_CMD
    _nRF24_read_reg->_nRF24_send_CMD

Critical Paths under _main in BANK0

    _nRF24_init->_nRF24_PD_mode
    _nRF24_PD_mode->_nRF24_read_reg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    4105
                                             10 BANK0      4     0      4
                         _nRF24_init
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _nRF24_init                                           0     0      0    4105
                      _nRF24_PD_mode
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nRF24_PD_mode                                        4     4      0    4105
                                              6 BANK0      4     4      0
                     _nRF24_read_reg
                    _nRF24_write_reg
 ---------------------------------------------------------------------------------
 (3) _nRF24_write_reg                                      5     3      2    2245
                                             12 COMMON     2     0      2
                                              0 BANK0      3     3      0
                     _nRF24_send_CMD
 ---------------------------------------------------------------------------------
 (3) _nRF24_read_reg                                       8     6      2    1761
                                             12 COMMON     2     0      2
                                              0 BANK0      6     6      0
                     _nRF24_send_CMD
 ---------------------------------------------------------------------------------
 (4) _nRF24_send_CMD                                      12     8      4     695
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nRF24_init
     _nRF24_PD_mode
       _nRF24_read_reg
         _nRF24_send_CMD
       _nRF24_write_reg
         _nRF24_send_CMD
     _spi_init
   _spi_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Jul 15 20:59:01 2014

                __CFG_CP$OFF 0000                           l21 07BB                           _BF 04A0  
                         l28 07DA                          l100 0737                          l803 07F1  
                        l805 07C6                          l807 07F5                          l833 07A6  
                        l795 07D8                          l789 07C9                          _RB3 0033  
                        _RB5 0035                          fsr0 0004                          indf 0000  
               __CFG_FOSC$XT 0000                 __CFG_LVP$OFF 0000     __size_of_nRF24_write_reg 0012  
                       _main 0737                         btemp 007E                         ltemp 007E  
                       start 0000                         ttemp 007E                         wtemp 007E  
              __CFG_IESO$OFF 0000                __CFG_MCLRE$ON 0000             ??_nRF24_read_reg 0020  
           ??_nRF24_send_CMD 0074                        ?_main 002A                __CFG_WDTE$OFF 0000  
             __CFG_DEBUG$OFF 0000                        _SSPEN 00A5               __CFG_CCPMX$RB0 0000  
             __CFG_FCMEN$OFF 0000               __CFG_BOREN$OFF 0000                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F       nRF24_read_reg@data_reg 007C              __initialization 07FD  
               __end_of_main 073E                       ??_main 007E                   _nRF24_init 074A  
                     _TRISB1 0431                       _TRISB2 0432                       _TRISB3 0433  
                     _TRISB4 0434                       _TRISB5 0435                       _SSPCON 0014  
                     _SSPBUF 0013       __size_of_nRF24_PD_mode 0025               __CFG_PWRTE$OFF 0000  
          ??_nRF24_write_reg 0020             __end_of_spi_init 074A      __end_of__initialization 07FD  
             __pcstackCOMMON 0070                _nRF24_PD_mode 0785                  ?_nRF24_init 0070  
                 __pmaintext 0737            nRF24_read_reg@reg 0023            nRF24_read_reg@tmp 0025  
             ?_nRF24_PD_mode 0070         nRF24_send_CMD@rxdata 0072         nRF24_send_CMD@txdata 0070  
                    _SSPSTAT 0094          __size_of_nRF24_init 000E                    ?_spi_init 0070  
                    __ptext0 0000                      __ptext1 074A                      __ptext2 073E  
                    __ptext3 0785                      __ptext4 0758                      __ptext5 076A  
                    __ptext6 07AA            nRF24_send_CMD@cmd 0076            nRF24_send_CMD@rxi 0079  
          nRF24_send_CMD@txi 0078         end_of_initialization 07FD              _nRF24_write_reg 0758  
                 ??_spi_init 0070              ??_nRF24_PD_mode 0026      __size_of_nRF24_read_reg 001B  
    __size_of_nRF24_send_CMD 0053      __end_of_nRF24_write_reg 076A          start_initialization 07FD  
  nRF24_send_CMD@rxbytecount 0073                 ??_nRF24_init 007E    nRF24_send_CMD@txbytecount 0071  
         __end_of_nRF24_init 0758  nRF24_write_reg@bytes_length 007D                    ___latbits 0001  
              __pcstackBANK0 0020            nRF24_PD_mode@data 0029   nRF24_send_CMD@nRF24_status 0077  
          __size_of_spi_init 000C               _nRF24_read_reg 076A   nRF24_read_reg@bytes_length 007D  
             _nRF24_send_CMD 07AA           nRF24_read_reg@data 0024             ?_nRF24_write_reg 007C  
        nRF24_PD_mode@status 0028       __end_of_nRF24_read_reg 0785        nRF24_send_CMD@rxbytes 007B  
         nRF24_write_reg@reg 0022        nRF24_send_CMD@txbytes 007A       __end_of_nRF24_send_CMD 07FD  
            ?_nRF24_read_reg 007C              ?_nRF24_send_CMD 0070        __end_of_nRF24_PD_mode 07AA  
              __size_of_main 0007                     _spi_init 073E                     main@argc 002A  
                   main@argv 002C      nRF24_write_reg@data_reg 007C  
